<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.hui.springboot.one.dao.UsersDao">
    <resultMap id="BaseResultMap" type="com.hui.springboot.one.entity.UserEntity">
        <id column="id" property="id" jdbcType="BIGINT"/>
        <result column="userName" property="userName" jdbcType="VARCHAR"/>
        <result column="passWord" property="passWord" jdbcType="VARCHAR"/>
        <result column="user_sex" property="userSex" javaType="com.hui.springboot.one.entity.UserSexEnum"/>
        <result column="nick_name" property="nickName" jdbcType="VARCHAR"/>
        <result column="gmt_create" property="gmtCreate" javaType="java.sql.Timestamp"/>
    </resultMap>

    <sql id="Base_Column_List">
        id, userName, passWord, user_sex, nick_name,gmt_create
    </sql>

    <select id="getAll" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
    </select>

    <select id="getOne" parameterType="java.lang.Long" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM users
        WHERE id = #{id}
    </select>

    <insert id="insert" parameterType="com.hui.springboot.one.entity.UserEntity">
        INSERT INTO
        users
        (userName,passWord,user_sex)
        VALUES
        (#{userName}, #{passWord}, #{userSex})
    </insert>

    <update id="update" parameterType="com.hui.springboot.one.entity.UserEntity">
        UPDATE
        users
        SET
        nick_name = #{nickName}
        <if test="userName != null">, userName = #{userName}</if>
        <if test="passWord != null">, passWord = #{passWord}</if>

        WHERE
        id = #{id}
    </update>

    <delete id="delete" parameterType="java.lang.Long">
        DELETE FROM users WHERE id =#{id}
    </delete>

</mapper>